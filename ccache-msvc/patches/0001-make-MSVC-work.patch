From f4926a6f06fd43a76b2ecbc2a9735f0bc64785c8 Mon Sep 17 00:00:00 2001
From: Peter Foley <pefoley2@verizon.net>
Date: Thu, 13 Sep 2012 16:51:33 -0400
Subject: [PATCH 1/3] make MSVC work

---
 ccache.c |   45 +++++++++++++++++++++++++++++++++++++++------
 ccache.h |    5 +++++
 2 files changed, 44 insertions(+), 6 deletions(-)

diff --git a/ccache.c b/ccache.c
index 0e93486..2235656 100644
--- a/ccache.c
+++ b/ccache.c
@@ -89,6 +89,9 @@ static struct args *orig_args;
 /* the source file */
 static char *input_file;

+/* what compiler are we using? */
+static compiler_type type = COMPILER_GCC;
+
 /* The output file being compiled to. */
 static char *output_obj;

@@ -571,7 +574,7 @@ process_preprocessed_file(struct mdfour *hash, const char *path)
 static void
 to_cache(struct args *args)
 {
-	char *tmp_stdout, *tmp_stderr, *tmp_obj;
+	char *tmp_stdout, *tmp_stderr, *tmp_obj, *tmp;
	struct stat st;
	int status;
	size_t added_bytes = 0;
@@ -591,8 +594,15 @@ to_cache(struct args *args)
		tmp_obj = format("%s.tmp.%s", cached_obj, tmp_string());
	}

-	args_add(args, "-o");
-	args_add(args, tmp_obj);
+	if (type == COMPILER_MSVC) {
+		tmp = format("%s%s", "-Fo", tmp_obj);
+		args_add(args, tmp);
+	} else {
+		args_add(args, "-o");
+		args_add(args, tmp_obj);
+	}
+
+

	/* Turn off DEPENDENCIES_OUTPUT when running cc1, because
	 * otherwise it will emit a line like
@@ -604,7 +614,16 @@ to_cache(struct args *args)
	if (conf->run_second_cpp) {
		args_add(args, input_file);
	} else {
-		args_add(args, i_tmpfile);
+		if (type == COMPILER_MSVC) {
+			if (str_eq(conf->cpp_extension,"ii")) {
+				tmp = format("%s%s", "-Tp", i_tmpfile);
+			} else  {
+				tmp = format("%s%s", "-Tc", i_tmpfile);
+			}
+			args_add(args, tmp);
+		} else {
+			args_add(args, i_tmpfile);
+		}
	}

	cc_log("Running real compiler");
@@ -614,7 +633,7 @@ to_cache(struct args *args)
	if (stat(tmp_stdout, &st) != 0) {
		fatal("Could not create %s (permission denied?)", tmp_stdout);
	}
-	if (st.st_size != 0) {
+	if (st.st_size != 0 && type != COMPILER_MSVC) {
		cc_log("Compiler produced stdout");
		stats_update(STATS_STDOUT);
		tmp_unlink(tmp_stdout);
@@ -1375,6 +1394,10 @@ find_compiler(char **argv)
		free(base);
		if (is_full_path(orig_args->argv[0])) {
			/* a full path was given */
+			/* are we using Visual C++? */
+			if (str_eq(basename(orig_args->argv[0]), "cl") || str_eq(basename(orig_args->argv[0]), "cl.exe")) {
+				type = COMPILER_MSVC;
+			}
			return;
		}
		base = basename(orig_args->argv[0]);
@@ -1384,6 +1407,10 @@ find_compiler(char **argv)
	if (!str_eq(conf->compiler, "")) {
		base = conf->compiler;
	}
+	/* are we using Visual C++? */
+		if (str_eq(base, "cl") || str_eq(base, "cl.exe")) {
+			type = COMPILER_MSVC;
+		}

	compiler = find_executable(base, MYNAME);

@@ -1573,6 +1600,12 @@ cc_process_args(struct args *args, struct args **preprocessor_args,
			continue;
		}

+		/* MSVC */
+		if (str_startswith(argv[i], "-Fo")) {
+			output_obj = make_relative_path(x_strdup(&argv[i][3]));
+			continue;
+		}
+
		/* debugging is handled specially, so that we know if we
		   can strip line number info
		*/
@@ -1596,7 +1629,7 @@ cc_process_args(struct args *args, struct args **preprocessor_args,
		/* These options require special handling, because they
		   behave differently with gcc -E, when the output
		   file is not specified. */
-		if (str_eq(argv[i], "-MD") || str_eq(argv[i], "-MMD")) {
+		if ((str_eq(argv[i], "-MD") && type != COMPILER_MSVC) || str_eq(argv[i], "-MMD")) {
			generating_dependencies = true;
			args_add(dep_args, argv[i]);
			continue;
diff --git a/ccache.h b/ccache.h
index 18a2b9e..7a0fbef 100644
--- a/ccache.h
+++ b/ccache.h
@@ -53,6 +53,11 @@ enum stats {
	STATS_END
 };

+typedef enum {
+	COMPILER_GCC,
+	COMPILER_MSVC
+} compiler_type;
+
 #define SLOPPY_INCLUDE_FILE_MTIME 1
 #define SLOPPY_FILE_MACRO 2
 #define SLOPPY_TIME_MACROS 4
--
1.7.9
